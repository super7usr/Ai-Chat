import express, { type Express } from "express";
import fs from "fs";
import path from "path";
import { createServer as createViteServer, createLogger } from "vite";
import { type Server } from "http";
import viteConfig from "../vite.config";
import { nanoid } from "nanoid";

const createLoggerInstance = createLogger;

/**
 * Logs messages with timestamp and source.
 */
export function log(message: string, source = "express") {
  const formattedTime = new Date().toLocaleTimeString("en-US", {
    hour: "numeric",
    minute: "2-digit",
    second: "2-digit",
    hour12: true,
  });
  console.log(`${formattedTime} [${source}] ${message}`);
}

/**
 * Utility to detect if we're running on Cloudflare Pages (production).
 * On Cloudflare, process.env.NODE_ENV should be 'production'
 * and the "CF_PAGES" env may be set.
 */
function isCloudflarePages() {
  return (
    process.env.CF_PAGES === "1" ||
    process.env.NODE_ENV === "production" ||
    process.env.CLOUDFLARE_PAGES === "1" ||
    !!process.env.CF_PAGES_URL
  );
}

/**
 * Setup Vite development middleware (only runs in dev)
 */
export async function setupVite(app: Express, server: Server) {
  // If running on Cloudflare Pages, skip Vite dev server setup
  if (isCloudflarePages()) {
    log("Running on Cloudflare Pages - skipping Vite dev middleware", "vite");
    return;
  }

  const serverOptions = {
    middlewareMode: true,
    hmr: { server },
    allowedHosts: true,
  };

  const vite = await createViteServer({
    ...viteConfig,
    configFile: false,
    customLogger: {
      ...viteConfig.logger,
      error: (msg, options) => {
        viteConfig.logger.error(msg, options);
        process.exit(1);
      },
    },
    server: serverOptions,
    appType: "custom",
  });

  app.use(vite.middlewares);

  // Dev SSR/HTML handler as fallback (client is reloaded in dev)
  app.use("/*", async (req, res, next) => {
    const url = req.originalUrl;
    try {
      const clientTemplate = path.resolve(
        import.meta.dir || __dirname,
        "..",
        "client",
        "index.html",
      );
      // Always reload template from disk (for hot updates)
      let template = await fs.promises.readFile(clientTemplate, "utf-8");
      template = template.replace(
        `src="/src/main.tsx"`,
        `src="/src/main.tsx?v=${nanoid()}"`
      );
      // Vite transform
      const page = await vite.transformIndexHtml(url, template);
      res.status(200).set({ "Content-Type": "text/html" }).end(page);
    } catch (e) {
      vite.ssrFixStacktrace(e as Error);
      next(e);
    }
  });
}

/**
 * Serve static files and handle all routes in production (Cloudflare Pages etc).
 * This is needed for serving `index.html` fallback on Cloudflare Pages and other hosts.
 *
 * Improvements for Cloudflare Pages:
 * - Explicitly use `/public` as the static dir fallback
 * - Show a clear error if the static directory isn't built/uploaded
 */
export function serveStatic(app: Express) {
  // On Cloudflare Pages, look for dist or public (try both)
  let distPath = path.resolve(import.meta.dir || __dirname, "public");
  if (!fs.existsSync(distPath)) {
    // Try Vite default build out dir
    distPath = path.resolve(import.meta.dir || __dirname, "..", "dist");
  }
  if (!fs.existsSync(distPath)) {
    throw new Error(
      `Could not find the build directory: ${distPath}, make sure to build the client first`
    );
  }
  app.use(express.static(distPath, {
    maxAge: isCloudflarePages() ? "1y" : 0,
    index: false,
  }));

  // Custom 404 handler if file doesn't exist: fallback to index.html for SPA routing
  app.use("/*", (_req, res) => {
    res.sendFile(path.resolve(distPath, "index.html"));
  });
}